{"version":3,"sources":["contexts/ThemeTypeContext.ts","pages/Search.tsx","hooks/useQueryParams.ts","App.tsx","ErrorBoundary.tsx","graphql/index.ts","reportWebVitals.ts","index.tsx","pages/Search.module.scss"],"names":["ThemeTypeContext","createContext","themeType","toggleThemeType","GET_POKEMON_QUERY","gql","DetailTypography","children","className","Typography","variant","component","Search","query","URLSearchParams","useLocation","search","history","useHistory","location","queryValue","get","useState","searchTextValue","setSearchTextValue","searchValue","setSearchValue","useContext","useLazyQuery","variables","name","fetch","called","data","error","loading","handleChange","e","target","value","handleSubmit","preventDefault","push","useEffect","AppBar","styles","appBarContainer","Paper","searchTextRoot","onSubmit","InputBase","searchTextInput","placeholder","inputProps","onChange","IconButton","type","aria-label","searchTextIconButton","themeToggle","onClick","searchResultWrapper","Box","CircularProgress","pokemon","searchResultContainer","pokemonImage","src","image","alt","pokemonDetail","data-testid","types","join","resistant","fleeRate","maxCP","weaknesses","classification","weight","minimum","maximum","height","evolutionRequirements","amount","evolutions","pokemonAvatarContainer","map","evolution","i","pokemonAvatar","to","Avatar","renderSearchResult","App","path","ErrorBoundary","state","hasError","errorInfo","console","this","props","_","Component","client","ApolloClient","uri","cache","InMemoryCache","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Root","prefersDarkMode","useMediaQuery","setThemeType","theme","React","useMemo","createMuiTheme","palette","Provider","ThemeProvider","CssBaseline","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.664ed5d8.chunk.js","sourcesContent":["import { createContext } from \"react\";\nimport { PaletteType } from \"@material-ui/core\";\n\nconst ThemeTypeContext = createContext({\n  themeType: \"light\" as PaletteType,\n  toggleThemeType: () => {},\n});\n\nexport default ThemeTypeContext;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { gql, useLazyQuery } from \"@apollo/client\";\n\nimport {\n  Box,\n  CircularProgress,\n  Typography,\n  Avatar,\n  AppBar,\n  InputBase,\n  Paper,\n  IconButton,\n} from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\nimport Brightness2Icon from \"@material-ui/icons/Brightness2\";\n\nimport styles from \"./Search.module.scss\";\n\nimport { IPokemon } from \"../interfaces/pokemon\";\nimport useQueryParams from \"../hooks/useQueryParams\";\nimport ThemeTypeContext from \"../contexts/ThemeTypeContext\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\nexport const GET_POKEMON_QUERY = gql`\n  query pokemon($name: String!) {\n    pokemon(name: $name) {\n      id\n      number\n      name\n      weight {\n        minimum\n        maximum\n      }\n      height {\n        minimum\n        maximum\n      }\n      classification\n      types\n      resistant\n      weaknesses\n      fleeRate\n      maxCP\n      maxHP\n      image\n      evolutionRequirements {\n        amount\n        name\n      }\n      evolutions {\n        name\n        image\n      }\n    }\n  }\n`;\n\nconst DetailTypography = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => (\n  <Typography variant=\"body2\" component=\"p\" className={className || \"\"}>\n    {children}\n  </Typography>\n);\n\nexport default function Search() {\n  const query = useQueryParams();\n  const history = useHistory();\n  const location = useLocation();\n  const queryValue = query.get(\"name\");\n  const [searchTextValue, setSearchTextValue] = useState(\"\");\n  const [searchValue, setSearchValue] = useState(\"\");\n  const { themeType, toggleThemeType } = useContext(ThemeTypeContext);\n\n  const [fetch, { called, data, error, loading }] = useLazyQuery<{\n    pokemon: IPokemon;\n  }>(GET_POKEMON_QUERY, {\n    variables: { name: searchValue },\n  });\n\n  useEffect(() => {\n    if (queryValue) {\n      setSearchTextValue(queryValue);\n      setSearchValue(queryValue);\n      fetch();\n    }\n  }, [location, fetch, queryValue]);\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setSearchTextValue(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent) {\n    e.preventDefault();\n\n    if (searchTextValue !== searchValue) {\n      history.push(`/?name=${searchTextValue}`);\n    }\n    setSearchValue(searchTextValue);\n  }\n\n  function renderSearchText() {\n    return (\n      <Paper\n        component=\"form\"\n        className={styles.searchTextRoot}\n        onSubmit={handleSubmit}\n      >\n        <InputBase\n          className={styles.searchTextInput}\n          placeholder=\"Search Pokemon\"\n          inputProps={{\n            \"aria-label\": \"search-button\",\n            \"data-testid\": \"search-button\",\n          }}\n          value={searchTextValue}\n          onChange={handleChange}\n        />\n        <IconButton\n          type=\"submit\"\n          aria-label=\"search\"\n          className={styles.searchTextIconButton}\n        >\n          <SearchIcon />\n        </IconButton>\n      </Paper>\n    );\n  }\n\n  function renderSearchResult() {\n    if (!called) {\n      return <div>Input pokemon name to search</div>;\n    }\n\n    if (loading) {\n      return (\n        <Box>\n          Searching...\n          <CircularProgress />\n        </Box>\n      );\n    }\n\n    if (error) {\n      throw error;\n    }\n\n    if (!data || !data.pokemon) {\n      return <div>Not found</div>;\n    }\n\n    const { pokemon } = data;\n\n    return (\n      <div className={styles.searchResultContainer}>\n        <div className={styles.pokemonImage}>\n          <img src={pokemon.image || \"\"} alt={pokemon.name || \"\"} />\n        </div>\n        <div className={styles.pokemonDetail}>\n          <Typography variant=\"h2\" component=\"h2\">\n            {pokemon.name}\n          </Typography>\n          <br />\n          <DetailTypography className=\"types\">\n            <b>Types:</b>{\" \"}\n            <span data-testid=\"pokemon-types\">\n              {pokemon.types?.join(\" \") || \"\"}\n            </span>\n          </DetailTypography>\n          <DetailTypography>\n            <b>Resistant(s):</b> {pokemon.resistant?.join(\" \") || \"\"}\n          </DetailTypography>\n          <DetailTypography>\n            <b>FleeRate:</b> {pokemon.fleeRate || \"\"}\n          </DetailTypography>\n          <DetailTypography>\n            <b>MaxCP:</b> {pokemon.maxCP || \"\"}\n          </DetailTypography>\n          <DetailTypography>\n            <b>Weakness(es):</b> {pokemon.weaknesses?.join(\" \") || \"-\"}\n          </DetailTypography>\n          <DetailTypography>\n            <b>Classification:</b> {pokemon.classification || \"-\"}\n          </DetailTypography>\n          <DetailTypography>\n            <b>Weight:</b>{\" \"}\n            {`${pokemon.weight?.minimum} - ${pokemon.weight?.maximum}`}\n          </DetailTypography>\n          <DetailTypography>\n            <b>Height:</b>{\" \"}\n            {`${pokemon.height?.minimum} - ${pokemon.height?.maximum}`}\n          </DetailTypography>\n          <DetailTypography>\n            <b>Evolution Requirement:</b>{\" \"}\n            {`${pokemon.evolutionRequirements?.amount || \"\"} ${\n              pokemon.evolutionRequirements?.name || \"\"\n            }`}\n          </DetailTypography>\n          <div className={styles.evolutions}>\n            <b>Evolution(s):</b>\n            <div className={styles.pokemonAvatarContainer}>\n              {pokemon.evolutions?.map((evolution, i) => (\n                <div className={styles.pokemonAvatar}>\n                  <Link\n                    key={`evolution-${evolution?.name}-${i}`}\n                    to={`/?name=${evolution.name}`}\n                  >\n                    <Avatar\n                      alt={evolution.name || \"\"}\n                      src={evolution.image || \"\"}\n                    />\n                  </Link>\n                </div>\n              )) || \" -\"}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <>\n      <AppBar>\n        <div className={styles.appBarContainer}>\n          <div className={styles.search}>{renderSearchText()}</div>\n          <div className={styles.themeToggle}>\n            <IconButton onClick={toggleThemeType}>\n              {themeType === \"light\" ? (\n                <Brightness7Icon />\n              ) : (\n                <Brightness2Icon />\n              )}\n            </IconButton>\n          </div>\n        </div>\n      </AppBar>\n      <div className={styles.searchResultWrapper}>{renderSearchResult()}</div>\n    </>\n  );\n}\n","import { useLocation } from \"react-router-dom\";\n\nexport default function useQueryParams() {\n  return new URLSearchParams(useLocation().search);\n}\n","import { Switch, Route } from \"react-router-dom\";\n\nimport Search from \"./pages/Search\";\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/\">\n        <Search />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","import React, { Component, ErrorInfo, ReactNode } from \"react\";\n\ninterface Props {\n  children: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <h1>Sorry.. there was an error</h1>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { ApolloClient, InMemoryCache } from \"@apollo/client\";\n\nconst uri = \"https://graphql-pokemon2.vercel.app\";\n\nexport const client = new ApolloClient({\n  uri,\n  cache: new InMemoryCache(),\n});\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport {\n  ThemeProvider,\n  createMuiTheme,\n  useMediaQuery,\n  CssBaseline,\n  PaletteType,\n} from \"@material-ui/core\";\n\nimport \"./index.css\";\n\nimport App from \"./App\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport { client } from \"./graphql\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport ThemeTypeContext from \"./contexts/ThemeTypeContext\";\n\nfunction Root() {\n  const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n  const [themeType, setThemeType] = useState<PaletteType>(\"light\");\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: themeType,\n        },\n      }),\n    [themeType]\n  );\n\n  React.useMemo(() => {\n    setThemeType(prefersDarkMode ? \"dark\" : \"light\");\n  }, [prefersDarkMode]);\n\n  function toggleThemeType() {\n    setThemeType(themeType === \"light\" ? \"dark\" : \"light\");\n  }\n\n  return (\n    <Router>\n      <ThemeTypeContext.Provider value={{ themeType, toggleThemeType }}>\n        <ThemeProvider theme={theme}>\n          <CssBaseline />\n          <ApolloProvider client={client}>\n            <App />\n          </ApolloProvider>\n        </ThemeProvider>\n      </ThemeTypeContext.Provider>\n    </Router>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundary>\n      <Root />\n    </ErrorBoundary>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appBarContainer\":\"Search_appBarContainer__3pAnM\",\"search\":\"Search_search__11K1C\",\"themeToggle\":\"Search_themeToggle__2OF3A\",\"searchTextRoot\":\"Search_searchTextRoot__33ECK\",\"searchTextInput\":\"Search_searchTextInput__2O8Ps\",\"searchTextIconButton\":\"Search_searchTextIconButton__1jSgQ\",\"searchResultWrapper\":\"Search_searchResultWrapper__13QHW\",\"searchResultContainer\":\"Search_searchResultContainer__pAqzv\",\"pokemonImage\":\"Search_pokemonImage__bOgUF\",\"pokemonDetail\":\"Search_pokemonDetail__2sK1k\",\"evolutions\":\"Search_evolutions__1Qi1-\",\"pokemonAvatarContainer\":\"Search_pokemonAvatarContainer__2Rsdk\",\"pokemonAvatar\":\"Search_pokemonAvatar__2MLMh\"};"],"sourceRoot":""}